Â
{/Users/alex-ama/Documents/GitHub/Books-recommendation-system/BooksRecommandationSystem/WebAPI/Controllers/BaseController.cs
	namespace 	
WebAPI
 
. 
Controllers 
{ 
[ 
Route 

(
 
$str 2
)2 3
]3 4
[ 
ApiController 
] 
public 

class 
BaseController 
:  !
ControllerBase" 0
{		 
	protected

 
	IMediator

 
mediator

 $
;

$ %
public 
BaseController 
( 
	IMediator '
mediator( 0
)0 1
{ 	
this 
. 
mediator 
= 
mediator $
;$ %
} 	
} 
} £
Å/Users/alex-ama/Documents/GitHub/Books-recommendation-system/BooksRecommandationSystem/WebAPI/Controllers/v1/AuthorsController.cs
	namespace 	
WebAPI
 
. 
Controllers 
. 
v1 
{ 
[ 

ApiVersion 
( 
$str 
) 
] 
public		 

class		 
AuthorsController		 "
:		# $
BaseController		% 3
{

 
public 
AuthorsController  
(  !
	IMediator! *
mediator+ 3
)3 4
:5 6
base7 ;
(; <
mediator< D
)D E
{ 	
} 	
[ 	
HttpGet	 
] 
public 
async 
Task 
< 
IActionResult '
>' (
Get) ,
(, -
)- .
{ 	
return 
Ok 
( 
await 
mediator $
.$ %
Send% )
() *
new* -
GetAuthorsQuery. =
(= >
)> ?
)? @
)@ A
;A B
} 	
[ 	
HttpPost	 
] 
public 
async 
Task 
< 
IActionResult '
>' (
Create) /
(/ 0
[0 1
FromBody1 9
]9 :
CreateAuthorCommand; N
commandO V
)V W
{ 	
return 
Ok 
( 
await 
mediator $
.$ %
Send% )
() *
command* 1
)1 2
)2 3
;3 4
} 	
[ 	
HttpPut	 
] 
public 
async 
Task 
< 
IActionResult '
>' (
Update) /
(/ 0
Guid0 4
id5 7
,7 8
[9 :
FromBody: B
]B C
UpdateAuthorCommandD W
commandX _
)_ `
{ 	
if 
( 
id 
!= 
command 
. 
Id  
)  !
{ 
return   

BadRequest   !
(  ! "
)  " #
;  # $
}!! 
return## 
Ok## 
(## 
await## 
mediator## $
.##$ %
Send##% )
(##) *
command##* 1
)##1 2
)##2 3
;##3 4
}$$ 	
[&& 	

HttpDelete&&	 
]&& 
public'' 
async'' 
Task'' 
<'' 
IActionResult'' '
>''' (
Delete'') /
(''/ 0
Guid''0 4
id''5 7
)''7 8
{(( 	
return)) 
Ok)) 
()) 
await)) 
mediator)) $
.))$ %
Send))% )
())) *
new))* -
DeleteAuthorCommand)). A
())A B
id))B D
)))D E
)))E F
)))F G
;))G H
}** 	
}++ 
},, î
/Users/alex-ama/Documents/GitHub/Books-recommendation-system/BooksRecommandationSystem/WebAPI/Controllers/v1/BooksController.cs
	namespace 	
WebAPI
 
. 
Controllers 
. 
v1 
{ 
[ 

ApiVersion 
( 
$str 
) 
] 
public		 

class		 
BooksController		  
:		! "
BaseController		# 1
{

 
public 
BooksController 
( 
	IMediator (
mediator) 1
)1 2
:3 4
base5 9
(9 :
mediator: B
)B C
{ 	
} 	
[ 	
HttpGet	 
] 
public 
async 
Task 
< 
IActionResult '
>' (
Get) ,
(, -
)- .
{ 	
return 
Ok 
( 
await 
mediator $
.$ %
Send% )
() *
new* -
GetBooksQuery. ;
(; <
)< =
)= >
)> ?
;? @
} 	
[ 	
HttpPost	 
] 
public 
async 
Task 
< 
IActionResult '
>' (
Create) /
(/ 0
[0 1
FromBody1 9
]9 :
CreateBookCommand; L
commandM T
)T U
{ 	
return 
Ok 
( 
await 
mediator $
.$ %
Send% )
() *
command* 1
)1 2
)2 3
;3 4
} 	
[ 	
HttpPut	 
] 
public 
async 
Task 
< 
IActionResult '
>' (
Update) /
(/ 0
Guid0 4
id5 7
,7 8
[9 :
FromBody: B
]B C
UpdateBookCommandD U
commandV ]
)] ^
{ 	
if 
( 
id 
!= 
command 
. 
Id  
)  !
{ 
return 

BadRequest !
(! "
)" #
;# $
} 
return!! 
Ok!! 
(!! 
await!! 
mediator!! $
.!!$ %
Send!!% )
(!!) *
command!!* 1
)!!1 2
)!!2 3
;!!3 4
}"" 	
[## 	

HttpDelete##	 
]## 
public$$ 
async$$ 
Task$$ 
<$$ 
IActionResult$$ '
>$$' (
Delete$$) /
($$/ 0
Guid$$0 4
id$$5 7
)$$7 8
{%% 	
return&& 
Ok&& 
(&& 
await&& 
mediator&& $
.&&$ %
Send&&% )
(&&) *
new&&* -
DeleteBookCommand&&. ?
(&&? @
id&&@ B
)&&B C
)&&C D
)&&D E
;&&E F
}'' 	
}(( 
})) ú
Ä/Users/alex-ama/Documents/GitHub/Books-recommendation-system/BooksRecommandationSystem/WebAPI/Controllers/v1/GenresController.cs
	namespace 	
WebAPI
 
. 
Controllers 
. 
v1 
{ 
[ 

ApiVersion 
( 
$str 
) 
] 
public		 

class		 
GenresController		 !
:		" #
BaseController		$ 2
{

 
public 
GenresController 
(  
	IMediator  )
mediator* 2
)2 3
:4 5
base6 :
(: ;
mediator; C
)C D
{ 	
} 	
[ 	
HttpGet	 
] 
public 
async 
Task 
< 
IActionResult '
>' (
Get) ,
(, -
)- .
{ 	
return 
Ok 
( 
await 
mediator $
.$ %
Send% )
() *
new* -
GetGenresQuery. <
(< =
)= >
)> ?
)? @
;@ A
} 	
[ 	
HttpPost	 
] 
public 
async 
Task 
< 
IActionResult '
>' (
Create) /
(/ 0
[0 1
FromBody1 9
]9 :
CreateGenreCommand; M
commandN U
)U V
{ 	
return 
Ok 
( 
await 
mediator $
.$ %
Send% )
() *
command* 1
)1 2
)2 3
;3 4
} 	
[ 	
HttpPut	 
] 
public 
async 
Task 
< 
IActionResult '
>' (
Update) /
(/ 0
Guid0 4
id5 7
,7 8
[9 :
FromBody: B
]B C
UpdateGenreCommandD V
commandW ^
)^ _
{ 	
if 
( 
id 
!= 
command 
. 
Id  
)  !
{ 
return 

BadRequest !
(! "
)" #
;# $
} 
return!! 
Ok!! 
(!! 
await!! 
mediator!! $
.!!$ %
Send!!% )
(!!) *
command!!* 1
)!!1 2
)!!2 3
;!!3 4
}"" 	
[## 	

HttpDelete##	 
]## 
public$$ 
async$$ 
Task$$ 
<$$ 
IActionResult$$ '
>$$' (
Delete$$) /
($$/ 0
Guid$$0 4
id$$5 7
)$$7 8
{%% 	
return&& 
Ok&& 
(&& 
await&& 
mediator&& $
.&&$ %
Send&&% )
(&&) *
new&&* -
DeleteGenreCommand&&. @
(&&@ A
id&&A C
)&&C D
)&&D E
)&&E F
;&&F G
}'' 	
}(( 
})) î
/Users/alex-ama/Documents/GitHub/Books-recommendation-system/BooksRecommandationSystem/WebAPI/Controllers/v1/UsersController.cs
	namespace 	
WebAPI
 
. 
Controllers 
. 
v1 
{ 
[ 

ApiVersion 
( 
$str 
) 
] 
public		 

class		 
UsersController		  
:		! "
BaseController		# 1
{

 
public 
UsersController 
( 
	IMediator (
mediator) 1
)1 2
:3 4
base5 9
(9 :
mediator: B
)B C
{ 	
} 	
[ 	
HttpGet	 
] 
public 
async 
Task 
< 
IActionResult '
>' (
Get) ,
(, -
)- .
{ 	
return 
Ok 
( 
await 
mediator $
.$ %
Send% )
() *
new* -
GetUsersQuery. ;
(; <
)< =
)= >
)> ?
;? @
} 	
[ 	
HttpPost	 
] 
public 
async 
Task 
< 
IActionResult '
>' (
Create) /
(/ 0
[0 1
FromBody1 9
]9 :
CreateUserCommand; L
commandM T
)T U
{ 	
return 
Ok 
( 
await 
mediator $
.$ %
Send% )
() *
command* 1
)1 2
)2 3
;3 4
} 	
[ 	
HttpPut	 
] 
public 
async 
Task 
< 
IActionResult '
>' (
Update) /
(/ 0
Guid0 4
id5 7
,7 8
[9 :
FromBody: B
]B C
UpdateUserCommandD U
commandV ]
)] ^
{ 	
if 
( 
id 
!= 
command 
. 
Id  
)  !
{ 
return 

BadRequest !
(! "
)" #
;# $
} 
return!! 
Ok!! 
(!! 
await!! 
mediator!! $
.!!$ %
Send!!% )
(!!) *
command!!* 1
)!!1 2
)!!2 3
;!!3 4
}"" 	
[## 	

HttpDelete##	 
]## 
public$$ 
async$$ 
Task$$ 
<$$ 
IActionResult$$ '
>$$' (
Delete$$) /
($$/ 0
Guid$$0 4
id$$5 7
)$$7 8
{%% 	
return&& 
Ok&& 
(&& 
await&& 
mediator&& $
.&&$ %
Send&&% )
(&&) *
new&&* -
DeleteUserCommand&&. ?
(&&? @
id&&@ B
)&&B C
)&&C D
)&&D E
;&&E F
}'' 	
}(( 
})) Ñ
h/Users/alex-ama/Documents/GitHub/Books-recommendation-system/BooksRecommandationSystem/WebAPI/Program.cs
var 
builder 
= 
WebApplication 
. 
CreateBuilder *
(* +
args+ /
)/ 0
;0 1
builder 
. 
Services 
. 
AddApiVersioning !
(! "
config" (
=>) +
{ 
config 

.
 
DefaultApiVersion 
= 
new "
	Microsoft# ,
., -

AspNetCore- 7
.7 8
Mvc8 ;
.; <

ApiVersion< F
(F G
$numG H
,H I
$numJ K
)K L
;L M
config		 

.		
 /
#AssumeDefaultVersionWhenUnspecified		 .
=		/ 0
true		1 5
;		5 6
config

 

.


 
ReportApiVersions

 
=

 
true

 #
;

# $
} 
) 
; 
builder 
. 
Services 
. 
AddControllers 
(  
)  !
;! "
builder 
. 
Services 
. #
AddEndpointsApiExplorer (
(( )
)) *
;* +
builder 
. 
Services 
. 
AddSwaggerGen 
( 
)  
;  !
builder 
. 
Services 
. 
AddPersistence 
(  
builder  '
.' (
Configuration( 5
)5 6
;6 7
builder 
. 
Services 
. 
AddApplication 
(  
)  !
;! "
var 
app 
= 	
builder
 
. 
Build 
( 
) 
; 
if 
( 
app 
. 
Environment 
. 
IsDevelopment !
(! "
)" #
)# $
{ 
app 
. 

UseSwagger 
( 
) 
; 
app 
. 
UseSwaggerUI 
( 
) 
; 
} 
app 
. 
UseHttpsRedirection 
( 
) 
; 
app!! 
.!! 
UseAuthorization!! 
(!! 
)!! 
;!! 
app## 
.## 
MapControllers## 
(## 
)## 
;## 
app%% 
.%% 
Run%% 
(%% 
)%% 	
;%%	 
